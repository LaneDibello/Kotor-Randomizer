<UserControl x:Class="Randomizer_WPF.Views.ModuleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:base="clr-namespace:Randomizer_WPF"
             xmlns:local="clr-namespace:Randomizer_WPF.Views"
             xmlns:model="clr-namespace:kotor_Randomizer_2.Models;assembly=KotorRandomizer"
             mc:Ignorable="d" 
             d:DesignHeight="620" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance model:Kotor1Randomizer, IsDesignTimeCreatable=True}"
             FontFamily="Microsoft Sans Serif" FontSize="12"
             Name="thisView"
             DataContextChanged="View_DataContextChanged"
             Loaded="View_Loaded"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/RandomizerWPF;component/Resources/StyleResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <base:AddToDoubleConverter x:Key="AddToDoubleConverter" />

            <Style TargetType="ToolTip">
                <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.Tag.FontSize}" />
            </Style>

            <ToolTip x:Key="ttLogicRules">
                These rules prevent certain modules from replacing others when that replacement would cause
                problems - inescapable or inaccessible rooms.
            </ToolTip>
            <ToolTip x:Key="ttLogicRule1">
                If a module has one exit, the module cannot replace its only destination. (e.g., Czerka Office
                cannot replace Anchorhead) This prevents binary infinite loops that you can't escape from.
            </ToolTip>
            <ToolTip x:Key="ttLogicRule2">
                The parent of a module with only one entrance cannot replace that module. (e.g., Anchorhead
                cannot replace Czerka Office) This prevents some modules from becoming completely unreachable.
            </ToolTip>
            <ToolTip x:Key="ttLogicRule3">
                If a module has multiple exits, but only one is unlocked, it cannot be in the unlocked location.
                (Sith Academy Entrance cannot replace Dreshdae) Similar to rule 1, this prevents binary loops
                that you can't escape from unless the other door is unlocked.
            </ToolTip>
            <ToolTip x:Key="ttLogicReachability">
                Reachability means that all modules leading up to and including the ones containing the goal(s)
                can be found using either normal in-game logic or using the glitches enabled below.
            </ToolTip>
            <ToolTip x:Key="ttLogicOnce">
                The reachability algorithm will ignore one-time use loading zones or transitions to fulfill the
                reachability condition. *Enable this option for a more stable randomization.*
            </ToolTip>
            <ToolTip x:Key="ttGoalMalak">
                Defeat Malak on the Viewing Platform of the Star Forge.
            </ToolTip>
            <ToolTip x:Key="ttGoalMaps">
                Collect the 5 star maps from Dantooine, Kashyyyk, Korriban, Manaan, and Tatooine.
            </ToolTip>
            <ToolTip x:Key="ttGoalPazaak">
                Defeat all pazaak players across the galaxy.
            </ToolTip>
            <ToolTip x:Key="ttGoalParty">
                Find and recruit all 9 party members.
            </ToolTip>
            <ToolTip x:Key="ttGlitchClip">
                Clipping through doors, etc.
            </ToolTip>
            <ToolTip x:Key="ttGlitchDLZ">
                Displaced Loading Zone
            </ToolTip>
            <ToolTip x:Key="ttGlitchFLU">
                Fake Level Up
            </ToolTip>
            <ToolTip x:Key="ttGlitchGPW">
                Gather Party Warp / Teleport
            </ToolTip>
            <ToolTip x:Key="ttStrongReachability">
                Ensure that every goal location is reachable from every other goal location. The resulting shuffle
                will be less reliant on using Hotshots to get back to important zones.
            </ToolTip>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel Background="{StaticResource WindowBrush}">
        <!-- Dock.Top, Title and Description -->
        <Border DockPanel.Dock="Top" BorderThickness="0,0,0,2" BorderBrush="{StaticResource HarshBlueBrush}">
            <StackPanel>
                <TextBlock Style="{StaticResource tbTitle}"
                           Text="Module Settings"
                           FontSize="{Binding ElementName=thisView, Path=FontSize, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                           />
                <TextBlock Style="{StaticResource tbDescription}">
                    Modules are the levels or maps within Kotor. Module randomization will shuffle the maps such
                    that all loading zones that lead to a certain map will lead to the same newly randomized map.
                    Logic settings improve the likelihood that a seed can be completed given the selected goal(s).
                </TextBlock>
                <TextBlock Text="* = Recommended Setting"
                           Foreground="{StaticResource HarshYellowBrush}"
                           Margin="5,0,0,5"
                           VerticalAlignment="Center"
                           />
            </StackPanel>
        </Border>
        
        <!-- Dock.Center, Settings -->
        <ScrollViewer Style="{StaticResource svPadded}">
            <StackPanel>
                <!-- Shuffle Module Presets -->
                <Grid Margin="0,0,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="184" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.ColumnSpan="2" MinWidth="180" /> <!-- spacer -->
                    <TextBlock Text="Shuffled Module Presets:" Style="{StaticResource tbHeader4}" />
                    <ComboBox x:Name="cbbShufflePreset" Grid.Column="2"
                              Margin="4,0"
                              SelectedItem="{Binding ModuleShufflePreset, Mode=TwoWay}"
                              SelectionChanged="CbbShufflePreset_SelectionChanged" />
                </Grid>

                <!--Title-->
                <TextBlock Grid.Row="0" Text="Custom Shuffle Settings:"
                            Style="{StaticResource tbHeader4}" />

                <Border BorderBrush="{StaticResource HarshBlueBrush}"
                        BorderThickness="1" Margin="0,5">
                    <!-- Custom Module Shuffle -->
                    <Grid Margin="5,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />    <!--Rando List-->
                            <ColumnDefinition Width="Auto" /> <!--Control Buttons-->
                            <ColumnDefinition Width="*" />    <!--Omit List-->
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="200" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style x:Key="RandomizedStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Foreground" Value="Black" />
                                <EventSetter Event="MouseDoubleClick" Handler="LvShuffleIncluded_DoubleClick" />
                            </Style>
                            <Style x:Key="OmittedStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Foreground" Value="Black" />
                                <EventSetter Event="MouseDoubleClick" Handler="LvShuffleExcluded_DoubleClick" />
                            </Style>
                            <Style TargetType="ScrollBar">
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter Property="Height"    Value="10" />
                                        <Setter Property="MinHeight" Value="10" />
                                    </Trigger>
                                    <Trigger Property="Orientation" Value="Vertical">
                                        <Setter Property="Width"    Value="10" />
                                        <Setter Property="MinWidth" Value="10" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="Label">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Foreground" Value="{StaticResource HarshBlueBrush}" />
                            </Style>
                        </Grid.Resources>

                        <!--Headers-->
                        <Label Grid.Row="0" Grid.Column="0" Content="Randomized" />
                        <Label Grid.Row="0" Grid.Column="2" Content="Omitted" />

                        <!--Randomized List-->
                        <ListView x:Name="lvShuffleIncluded" Grid.Row="1" Grid.Column="0"
                                  ItemContainerStyle="{StaticResource RandomizedStyle}"
                                  ItemsSource="{Binding ModuleRandomizedList}"
                                  FontSize="{Binding ElementName=thisView, Path=FontSize, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-1}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="80" DisplayMemberBinding="{Binding Planet}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="Planet" Click="LvShuffleIncluded_ColumnHeader_Click" Content="Planet" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="80" DisplayMemberBinding="{Binding WarpCode}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="WarpCode" Click="LvShuffleIncluded_ColumnHeader_Click" Content="Code" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="160" DisplayMemberBinding="{Binding CommonName}">
                                        <GridViewColumnHeader Tag="CommonName" Click="LvShuffleIncluded_ColumnHeader_Click" Content="Name" />
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <!--Control Buttons-->
                        <StackPanel Grid.Row="1" Grid.Column="1" Margin="5,0"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource K1RandoButtonStyle}">
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="FontFamily" Value="Consolas" />
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Margin" Value="0,2" />
                                    <Setter Property="Padding" Value="3,3" />
                                    <Setter Property="Width" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </StackPanel.Resources>
                            <Button Content="&lt;&lt;" ToolTip="Randomize All" Click="BtnRandomizeAll_Click" />
                            <Button Content="&lt;" ToolTip="Randomize Selected" Click="BtnRandomizeSelected_Click" />
                            <Button Content="&gt;" ToolTip="Omit Selected" Click="BtnOmitSelected_Click" />
                            <Button Content="&gt;&gt;" ToolTip="Omit All" Click="BtnOmitAll_Click" />
                        </StackPanel>

                        <!--Omitted List-->
                        <ListView x:Name="lvShuffleExcluded" Grid.Row="1" Grid.Column="2"
                                  ItemContainerStyle="{StaticResource OmittedStyle}"
                                  ItemsSource="{Binding ModuleOmittedList}"
                                  FontSize="{Binding ElementName=thisView, Path=FontSize, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=-1}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="80" DisplayMemberBinding="{Binding Planet}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="Planet" Click="LvShuffleExcluded_ColumnHeader_Click" Content="Planet" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="80" DisplayMemberBinding="{Binding WarpCode}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="WarpCode" Click="LvShuffleExcluded_ColumnHeader_Click" Content="Code" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="160" DisplayMemberBinding="{Binding CommonName}">
                                        <GridViewColumnHeader Tag="CommonName" Click="LvShuffleExcluded_ColumnHeader_Click" Content="Name" />
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <!--Filter-->
                        <DockPanel Grid.Row="2" Grid.ColumnSpan="3" Margin="0,5,0,1">
                            <TextBlock DockPanel.Dock="Left" Text="Filter: "
                                       Style="{StaticResource tbHeader4}"
                                       Margin="10,0,5,0"
                                       VerticalAlignment="Center" />
                            <TextBox x:Name="txtFilter" TextChanged="TxtFilter_TextChanged" />
                        </DockPanel>
                    </Grid>
                </Border>

                <!-- Logic -->
                <TextBlock Style="{StaticResource tbHeader4}" Margin="0,5" Text="Shuffle Logic:" />
                <StackPanel Margin="10,0,0,0">
                    <StackPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="3,0,0,0" />
                            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ModuleView}}" />
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="3,3,0,3" />
                            <Setter Property="Foreground" Value="{StaticResource HarshBlueBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MediumGrayBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding ModuleLogicRandoRules, Mode=TwoWay}"
                                  ToolTip="{StaticResource ttLogicRules}">
                            <TextBlock Text="Use Randomization Exclusion Rules" />
                        </CheckBox>
                        <TextBlock Text="*"
                                   Foreground="{StaticResource HarshYellowBrush}"
                                   VerticalAlignment="Center" />
                        <TextBlock Margin="10,0" VerticalAlignment="Center">
                            <Run Text="(Rule 1," ToolTip="{StaticResource ttLogicRule1}" />
                            <Run Text="Rule 2,"  ToolTip="{StaticResource ttLogicRule2}" />
                            <Run Text="Rule 3)"  ToolTip="{StaticResource ttLogicRule3}" />
                        </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding ModuleLogicReachability, Mode=TwoWay}"
                                  ToolTip="{StaticResource ttLogicReachability}">
                            <TextBlock Text="Verify Module Reachability" />
                        </CheckBox>
                        <TextBlock Text="*"
                                   Foreground="{StaticResource HarshYellowBrush}"
                                   VerticalAlignment="Center" />
                    </StackPanel>

                    <StackPanel Margin="20,0,0,0"
                                IsEnabled="{Binding ModuleLogicReachability, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding ModuleLogicIgnoreOnceEdges, Mode=TwoWay}"
                                      ToolTip="{StaticResource ttLogicOnce}">
                                <TextBlock Text="Ignore Single-Use Transitions" />
                            </CheckBox>
                            <TextBlock Text="*"
                                       Foreground="{StaticResource HarshYellowBrush}"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        <CheckBox IsChecked="{Binding ModuleLogicStrongGoals, Mode=TwoWay}"
                                  ToolTip="{StaticResource ttStrongReachability}">
                            <TextBlock Text="Strongly Reachable Goals" />
                        </CheckBox>
                    </StackPanel>
                </StackPanel>

                <!-- Goals -->
                <TextBlock Style="{StaticResource tbHeader4}" Margin="0,5" Text="Goal(s):" />
                <WrapPanel Margin="10,0,0,0">
                    <WrapPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="3,0" />
                            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ModuleView}}" />
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Foreground" Value="{StaticResource HarshBlueBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MediumGrayBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Resources>
                    <CheckBox IsChecked="{Binding ModuleGoalIsMalak, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGoalMalak}">
                        <TextBlock Text="Defeat Malak" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleGoalIsStarMap, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGoalMaps}">
                        <TextBlock Text="Collect Star Maps" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleGoalIsPazaak, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGoalPazaak}">
                        <TextBlock Text="Pazaak Champion" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleGoalIsFullParty, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGoalParty}">
                        <TextBlock Text="Recruit Party Members" />
                    </CheckBox>
                </WrapPanel>

                <!-- Glitches -->
                <TextBlock Style="{StaticResource tbHeader4}" Margin="0,5" Text="Potentially Required Glitches:" />
                <WrapPanel Margin="10,0,0,0">
                    <WrapPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="3,0" />
                            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=local:ModuleView}}" />
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Foreground" Value="{StaticResource HarshBlueBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MediumGrayBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Resources>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchClip, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGlitchClip}">
                        <TextBlock Text="Clipping" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchDlz, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGlitchDLZ}">
                        <TextBlock Text="DLZ" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchFlu, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGlitchFLU}">
                        <TextBlock Text="FLU" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchGpw, Mode=TwoWay}"
                              ToolTip="{StaticResource ttGlitchGPW}">
                        <TextBlock Text="GPW" />
                    </CheckBox>
                </WrapPanel>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
