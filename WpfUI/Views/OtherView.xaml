<UserControl x:Class="Randomizer_WPF.Views.OtherView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:base="clr-namespace:Randomizer_WPF"
             xmlns:local="clr-namespace:Randomizer_WPF.Views"
             xmlns:model="clr-namespace:kotor_Randomizer_2.Models;assembly=KotorRandomizer"
             xmlns:uc="clr-namespace:Randomizer_WPF.UserControls"
             mc:Ignorable="d" 
             FontFamily="Microsoft Sans Serif" FontSize="12"
             d:DesignHeight="500" d:DesignWidth="500"
             d:DataContext="{d:DesignInstance model:Kotor1Randomizer, IsDesignTimeCreatable=True}"
             x:Name="thisView"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/RandomizerWPF;component/Resources/StyleResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <base:AddToDoubleConverter x:Key="AddToDoubleConverter" />
            <base:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

            <Style TargetType="ToolTip">
                <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.Tag.FontSize}" />
            </Style>

            <ToolTip x:Key="ttPolymorph">
                Causes equipable items to have random disguise modifiers, essentially allowing the player to
                polymorph. (Doesn't synergize well with model rando!)
            </ToolTip>
            <ToolTip x:Key="ttPazaak">
                Randomizes the cards contained within the NPC pazaak decks.
            </ToolTip>
            <ToolTip x:Key="ttParty">
                This entirely morphs each party member into a different creature, wth different stats and equipment.
            </ToolTip>
            <ToolTip x:Key="ttBooster">
                Randomizes the placement of booster pads in each swoop track - Taris, Tatooine, and Manaan.
            </ToolTip>
            <ToolTip x:Key="ttObstacle">
                **NOT RECOMMENDED** Randomizes the placement of obstacles in each swoop track - Taris, Tatooine, and
                Manaan. ** Visual location of the obstacles does not change!
            </ToolTip>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel Background="{DynamicResource ContentAreaDarkBrush}">
        <!--Header and Description-->
        <Border DockPanel.Dock="Top" BorderThickness="0,0,0,2"
                BorderBrush="{DynamicResource ControlForegroundBrush}">
            <StackPanel>
                <TextBlock Style="{StaticResource tbTitle}"
                           Text="Other Randomization"
                           FontSize="{Binding ElementName=thisView, Path=FontSize, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=10}"
                           />
                <TextBlock Style="{StaticResource tbDescription}">
                    This category holds randomization options that don't quite fit into any other category.
                </TextBlock>
            </StackPanel>
        </Border>

        <!--Settings-->
        <ScrollViewer Style="{StaticResource svPadded}">
            <StackPanel>
                <StackPanel.Resources>
                    <Style TargetType="Expander">
                        <Setter Property="Margin" Value="0,0,0,5" />
                        <Setter Property="Padding" Value="2" />
                        <Setter Property="BorderBrush" Value="{DynamicResource ControlForegroundBrush}" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Style>
                </StackPanel.Resources>

                <!--Various Other-->
                <Border BorderBrush="{DynamicResource ControlForegroundBrush}"
                        BorderThickness="1" Margin="0,0,0,5">
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="CheckBox">
                                <Setter Property="Margin" Value="0,5,5,0" />
                                <Setter Property="Padding" Value="5,0" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=local:OtherView}}" />
                            </Style>
                            <Style TargetType="StackPanel">

                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{StaticResource MediumGrayBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>

                        <!--Title-->
                        <TextBlock Text="Various Other"
                                   TextDecorations="Underline"
                                   Style="{StaticResource tbHeader3}"
                                   FontSize="{Binding ElementName=thisView, Path=FontSize, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=2}"
                                   Margin="5,0,5,5"
                                   />

                        <!--Variety-->
                        <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource tbHeader4}"
                                   Text="Various" HorizontalAlignment="Center" />
                        <StackPanel Grid.Column="0" Grid.Row="2">
                            <CheckBox IsChecked="{Binding OtherPolymorphMode, Mode=TwoWay}"
                                      ToolTip="{StaticResource ttPolymorph}">
                                <TextBlock Text="Equipment Polymorph Mode" />
                            </CheckBox>
                            <CheckBox IsChecked="{Binding OtherPazaakDecks, Mode=TwoWay}"
                                      ToolTip="{StaticResource ttPazaak}">
                                <TextBlock Text="Randomize NPC Pazaak Decks" />
                            </CheckBox>
                            <CheckBox IsChecked="{Binding OtherPartyMembers, Mode=TwoWay}"
                                      ToolTip="{StaticResource ttParty}">
                                <TextBlock Text="Randomize Party Members" />
                            </CheckBox>
                        </StackPanel>

                        <!--Swoop Related-->
                        <TextBlock Grid.Column="1" Grid.Row="1" Style="{StaticResource tbHeader4}"
                                   Text="Swoop Races" HorizontalAlignment="Center" />
                        <StackPanel Grid.Column="1" Grid.Row="2">
                            <CheckBox IsChecked="{Binding OtherSwoopBoosters, Mode=TwoWay}"
                                      ToolTip="{StaticResource ttBooster}">
                                <TextBlock Text="Booster Pad Placement" />
                            </CheckBox>
                            <CheckBox IsChecked="{Binding OtherSwoopObstacles, Mode=TwoWay}"
                                      ToolTip="{StaticResource ttObstacle}">
                                <TextBlock Text="Obstacle Placement" />
                            </CheckBox>
                        </StackPanel>
                    </Grid>
                </Border>

                <!--Name Generation-->
                <Border BorderBrush="{DynamicResource ControlForegroundBrush}"
                        BorderThickness="1" Margin="0,0,0,5">
                    <Grid Margin="5" Height="250">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="ScrollBar">
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter Property="Height"    Value="10" />
                                        <Setter Property="MinHeight" Value="10" />
                                    </Trigger>
                                    <Trigger Property="Orientation" Value="Vertical">
                                        <Setter Property="Width"    Value="10" />
                                        <Setter Property="MinWidth" Value="10" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource ControlForegroundBrush}" />
                                <Setter Property="TextAlignment" Value="Center" />
                                <Setter Property="Margin" Value="0,0,0,2" />
                            </Style>
                        </Grid.Resources>
                        
                        <!--Title & Description Toggle-->
                        <TextBlock Text="Name Generation"
                                   Style="{StaticResource tbHeader3}"
                                   TextDecorations="Underline"
                                   FontSize="{Binding ElementName=thisView, Path=FontSize, Converter={StaticResource AddToDoubleConverter}, ConverterParameter=2}"
                                   Margin="5,0,5,5"
                                   />
                        <CheckBox x:Name="cbDescriptionToggle" Grid.Column="4"
                                  Margin="0,3" Padding="5,0"
                                  VerticalContentAlignment="Center">
                            <TextBlock Text="Show Help" />
                        </CheckBox>

                        <!--Description-->
                        <TextBlock Style="{StaticResource tbDescription}"
                                   Margin="0,0,0,4" Grid.Row="1" Grid.ColumnSpan="5"
                                   Visibility="{Binding ElementName=cbDescriptionToggle, Path=IsChecked, Converter={StaticResource BoolToVisibilityConverter}}">
                            Name Generation replaces the letter-combo-probability files used when generating random names in-game.
                            <Run Foreground="{DynamicResource SelectedTextBrush}" TextDecorations="Underline">Write each name on a separate line.</Run>
                            Valid characters are limited to alphabetical, hyphen, and apostrophe. The names provide the basis for the random names
                            and may not appear in-game.
                        </TextBlock>
                        
                        <!--Checkbox-->
                        <CheckBox Grid.ColumnSpan="5" Grid.Row="2"
                                  Margin="0,3" Padding="5,0"
                                  VerticalContentAlignment="Center"
                                  IsChecked="{Binding OtherNameGeneration, Mode=TwoWay}">
                            <TextBlock Text="Replace Name Generation Files" />
                        </CheckBox>
                        
                        <!--Headers-->
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="First Name (Female)" />
                        <TextBlock Grid.Row="3" Grid.Column="2" Text="First Name (Male)" />
                        <TextBlock Grid.Row="3" Grid.Column="4" Text="Last Name" />
                        
                        <!--Text Boxes-->
                        <uc:RestrictedTextBox x:Name="rtbFName" Grid.Column="0" Text="{Binding OtherFirstNamesF, Mode=TwoWay}" />
                        <uc:RestrictedTextBox x:Name="rtbMName" Grid.Column="2" Text="{Binding OtherFirstNamesM, Mode=TwoWay}" />
                        <uc:RestrictedTextBox x:Name="rtbLName" Grid.Column="4" Text="{Binding OtherLastNames, Mode=TwoWay}" />
                    </Grid>
                </Border>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
