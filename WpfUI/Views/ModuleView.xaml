<UserControl x:Class="Randomizer_WPF.Views.ModuleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Randomizer_WPF.Views"
             xmlns:model="clr-namespace:kotor_Randomizer_2.Models;assembly=KotorRandomizer"
             mc:Ignorable="d" 
             d:DesignHeight="540" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance model:Kotor1Randomizer, IsDesignTimeCreatable=True}"
             FontFamily="Microsoft Sans Serif" FontSize="12"
             Name="thisView"
             DataContextChanged="View_DataContextChanged"
             Loaded="View_Loaded"
             >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/RandomizerWPF;component/Resources/StyleResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel Background="{StaticResource WindowBrush}">
        <!-- Dock.Top, Title and Description -->
        <Border DockPanel.Dock="Top" BorderThickness="0,0,0,2" BorderBrush="{StaticResource HarshBlueBrush}">
            <StackPanel>
                <TextBlock Style="{StaticResource tbTitle}" Text="Module Settings" />
                <TextBlock Style="{StaticResource tbDescription}">
                    Modules are the levels or maps within Kotor. Module randomization will shuffle the maps such
                    that all loading zones that lead to a certain map will lead to the same newly randomized map.
                    Logic settings improve the likelihood that a seed can be completed given the selected goal(s).
                </TextBlock>
            </StackPanel>
        </Border>
        
        <!-- Dock.Center, Settings -->
        <ScrollViewer Style="{StaticResource svPadded}">
            <StackPanel>
                <!-- Shuffle Module Presets -->
                <Grid Margin="0,0,0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="180" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.ColumnSpan="2" MinWidth="180" /> <!-- spacer -->
                    <TextBlock Text="Shuffled Module Presets:" Style="{StaticResource tbHeader4}" />
                    <ComboBox x:Name="cbbShufflePreset" Grid.Column="2"
                              SelectedItem="{Binding ModuleShufflePreset, Mode=TwoWay}"
                              SelectionChanged="CbbShufflePreset_SelectionChanged" />
                </Grid>

                <!-- Custom Module Shuffle -->
                <Expander BorderBrush="{StaticResource HarshBlueBrush}" BorderThickness="1" Padding="2">
                    <Expander.Resources>
                        <Style x:Key="RandomizedStyle" TargetType="{x:Type ListViewItem}">
                            <EventSetter Event="MouseDoubleClick" Handler="LvShuffleIncluded_DoubleClick" />
                        </Style>
                        <Style x:Key="OmittedStyle" TargetType="{x:Type ListViewItem}">
                            <EventSetter Event="MouseDoubleClick" Handler="LvShuffleExcluded_DoubleClick" />
                        </Style>
                        <Style TargetType="ScrollBar">
                            <Style.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter Property="Height"    Value="10" />
                                    <Setter Property="MinHeight" Value="10" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="Width"    Value="10" />
                                    <Setter Property="MinWidth" Value="10" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Expander.Resources>
                    <Expander.Header>
                        <TextBlock Style="{StaticResource tbHeader3}" Text="Custom Shuffle Settings" />
                    </Expander.Header>
                    <Grid Margin="5,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />    <!--Rando List-->
                            <ColumnDefinition Width="Auto" /> <!--Control Buttons-->
                            <ColumnDefinition Width="*" />    <!--Omit List-->
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="250" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        
                        <!-- Row 0 -->
                        <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center"
                               Content="Randomized"
                               Foreground="{StaticResource HarshBlueBrush}" />
                        <Label Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center"
                               Content="Omitted"
                               Foreground="{StaticResource HarshBlueBrush}" />
                        
                        <!--Randomized List-->
                        <ListView x:Name="lvShuffleIncluded" Grid.Row="1" Grid.Column="0"
                                  ItemContainerStyle="{StaticResource RandomizedStyle}"
                                  ItemsSource="{Binding ModuleRandomizedList}" FontSize="11">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="70" DisplayMemberBinding="{Binding Planet}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="Planet" Click="LvShuffleIncluded_ColumnHeader_Click" Content="Planet" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="74" DisplayMemberBinding="{Binding WarpCode}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="WarpCode" Click="LvShuffleIncluded_ColumnHeader_Click" Content="Code" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="140" DisplayMemberBinding="{Binding CommonName}">
                                        <GridViewColumnHeader Tag="CommonName" Click="LvShuffleIncluded_ColumnHeader_Click" Content="Name" />
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <!--Control Buttons-->
                        <StackPanel Grid.Row="1" Grid.Column="1" Margin="5,0"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource K1RandoButtonStyle}">
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="FontFamily" Value="Consolas" />
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Margin" Value="0,2" />
                                    <Setter Property="Padding" Value="3,3" />
                                    <Setter Property="Width" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                </Style>
                            </StackPanel.Resources>
                            <Button Content="&lt;&lt;" ToolTip="Randomize All" Click="BtnRandomizeAll_Click" />
                            <Button Content="&lt;" ToolTip="Randomize Selected" Click="BtnRandomizeSelected_Click" />
                            <Button Content="&gt;" ToolTip="Omit Selected" Click="BtnOmitSelected_Click" />
                            <Button Content="&gt;&gt;" ToolTip="Omit All" Click="BtnOmitAll_Click" />
                        </StackPanel>

                        <!--Omitted List-->
                        <ListView x:Name="lvShuffleExcluded" Grid.Row="1" Grid.Column="2"
                                  ItemContainerStyle="{StaticResource OmittedStyle}"
                                  ItemsSource="{Binding ModuleOmittedList}" FontSize="11">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="70" DisplayMemberBinding="{Binding Planet}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="Planet" Click="LvShuffleExcluded_ColumnHeader_Click" Content="Planet" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="74" DisplayMemberBinding="{Binding WarpCode}">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Tag="WarpCode" Click="LvShuffleExcluded_ColumnHeader_Click" Content="Code" />
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn Width="140" DisplayMemberBinding="{Binding CommonName}">
                                        <GridViewColumnHeader Tag="CommonName" Click="LvShuffleExcluded_ColumnHeader_Click" Content="Name" />
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        
                        <!--Filter-->
                        <DockPanel Grid.Row="2" Grid.ColumnSpan="3" Margin="0,5,0,0">
                            <TextBlock DockPanel.Dock="Left" Text="Filter: "
                                       Style="{StaticResource tbHeader4}"
                                       Margin="10,0,5,0"
                                       VerticalAlignment="Center" />
                            <TextBox x:Name="txtFilter" TextChanged="TxtFilter_TextChanged" />
                        </DockPanel>
                    </Grid>
                </Expander>

                <!-- Logic -->
                <TextBlock Style="{StaticResource tbHeader4}" Margin="0,5" Text="Shuffle Logic:" />
                <StackPanel Margin="10,0,0,0">
                    <StackPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="3,0" />
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Foreground" Value="{StaticResource HarshBlueBrush}" />
                        </Style>
                    </StackPanel.Resources>
                    
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding ModuleLogicRandoRules, Mode=TwoWay}">
                            <TextBlock Text="Use Randomization Exclusion Rules" />
                        </CheckBox>
                        <TextBlock Margin="10,0" VerticalAlignment="Center">
                            <Run Text="(Rule 1,">
                                <Run.ToolTip>
                                    <TextBlock Foreground="Black">
                                        If a module has one exit, the module cannot replace its only<LineBreak/>
                                        destination. (e.g., Czerka Office cannot replace Anchorhead)<LineBreak/>
                                        This prevents binary infinite loops that you can't escape from.
                                    </TextBlock>
                                </Run.ToolTip>
                            </Run>
                            <Run Text="Rule 2,">
                                <Run.ToolTip>
                                    <TextBlock Foreground="Black">
                                        The parent of a module with only one entrance cannot replace<LineBreak/>
                                        that module. (e.g., Anchorhead cannot replace Czerka Office)<LineBreak/>
                                        This prevents some modules from becoming completely unreachable.
                                    </TextBlock>
                                </Run.ToolTip>
                            </Run>
                            <Run Text="Rule 3)">
                                <Run.ToolTip>
                                    <TextBlock Foreground="Black">
                                        If a module has multiple exits, but only one is unlocked, it<LineBreak/>
                                        cannot be in the unlocked location. (Sith Academy Entrance<LineBreak/>
                                        cannot replace Dreshdae)<LineBreak/>
                                        Similar to rule 1, this prevents binary loops that you can't<LineBreak/>
                                        escape from unless the other door is unlocked.
                                    </TextBlock>
                                </Run.ToolTip>
                            </Run>
                        </TextBlock>
                    </StackPanel>

                    <CheckBox IsChecked="{Binding ModuleLogicReachability, Mode=TwoWay}">
                        <TextBlock Text="Verify Module Reachability" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleLogicIgnoreOnceEdges, Mode=TwoWay}">
                        <TextBlock Text="Ignore Single-Use Transitions" />
                    </CheckBox>
                </StackPanel>

                <!-- Goals -->
                <TextBlock Style="{StaticResource tbHeader4}" Margin="0,5" Text="Goal(s):" />
                <WrapPanel Margin="10,0,0,0">
                    <WrapPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="3,0" />
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Foreground" Value="{StaticResource HarshBlueBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MediumGrayBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Resources>
                    <CheckBox IsChecked="{Binding ModuleGoalIsMalak, Mode=TwoWay}">
                        <TextBlock Text="Defeat Malak" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleGoalIsStarMap, Mode=TwoWay}">
                        <TextBlock Text="Collect Star Maps" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleGoalIsPazaak, Mode=TwoWay}">
                        <TextBlock Text="Pazaak Champion" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleGoalIsFullParty, Mode=TwoWay}" IsEnabled="False">
                        <TextBlock Text="Recruit Party Members" />
                    </CheckBox>
                </WrapPanel>
                <!--<Grid Margin="0,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="180" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.ColumnSpan="2" MinWidth="180" />
                    <TextBlock Text="Goal(s):" Style="{StaticResource tbHeader4}" />
                    <ComboBox x:Name="cmbGoal" Grid.Column="2">
                        <ComboBoxItem Tag="Malak" IsSelected="True">Defeat Malak</ComboBoxItem>
                        <ComboBoxItem Tag="StarMaps">Collect Star Maps</ComboBoxItem>
                        <ComboBoxItem Tag="Pazaak">Pazaak Champion</ComboBoxItem>
                        <ComboBoxItem Tag="Party">Recruit Party Members</ComboBoxItem>
                    </ComboBox>
                </Grid>-->

                <!-- Glitches -->
                <TextBlock Style="{StaticResource tbHeader4}" Margin="0,5" Text="Potentially Required Glitches:" />
                <WrapPanel Margin="10,0,0,0">
                    <WrapPanel.Resources>
                        <Style TargetType="CheckBox">
                            <Setter Property="Margin" Value="3,0" />
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="3" />
                            <Setter Property="Foreground" Value="{StaticResource HarshBlueBrush}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource MediumGrayBrush}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Resources>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchClip, Mode=TwoWay}">
                        <TextBlock Text="Clipping" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchDlz, Mode=TwoWay}">
                        <TextBlock Text="DLZ" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchFlu, Mode=TwoWay}">
                        <TextBlock Text="FLU" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchGpw, Mode=TwoWay}">
                        <TextBlock Text="GPW" />
                    </CheckBox>
                    <CheckBox IsChecked="{Binding ModuleAllowGlitchHotshot, Mode=TwoWay}" IsEnabled="False">
                        <TextBlock Text="Hotshot" />
                    </CheckBox>
                </WrapPanel>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
